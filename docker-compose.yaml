services:
  postgres:
    container_name: ms_postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "@Kalilinux3"
      POSTGRES_USER: cpulsivek
      POSTGRES_MULTIPLE_DATABASES: UserDB,VideoDB
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks:
      - microservice-net

  mongo:
    container_name: ms_mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: cpulsivek
      MONGO_INITDB_ROOT_PASSWORD: "@Kalilinux3"
    volumes:
      - ./mongodata:/data/db
    ports:
      - 27017:27017
    networks:
      - microservice-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservice-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservice-net

volumes:
  postgres:
  mongo:
  pgadmin:

networks:
  microservice-net:
    driver: bridge